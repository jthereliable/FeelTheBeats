require "coffee-script"

crypto      = require "misc/crypto"
string      = require "misc/string"
settings    = require "settings"
token_seed	= require settings.tokens.seed_path

validate = exports.validate = (token) ->
  if !token?
    return false

  token = token.split "."
  if token.length != 3
    return false

  raw_token = token[0]
  hash_check = token[1]
  mac_salt = token[2]

  if raw_token.split("|").length != 5
    return false

  hash_validate = crypto.mac_sha256(raw_token, token_seed.mac_salt + mac_salt).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")
  hash_check == hash_validate

alive = exports.alive = (token) ->
  if !validate(token)
    return false
  expiration = Number(token.split(".")[0].split("|")[3])
  now = (new Date()).getTime()
  now < expiration

parse = exports.parse = (token, salt="") ->
  if !alive(token)
    return null

  token = token.split(".")[0].split("|")

  id = token[0]
  enc_json = token[1]
  enc_key = token[2]
  expiration = token[3]

  key = token_seed.enc_salt + expiration + enc_key + salt + id
  enc_json = enc_json.replace(/\-/g,"+").replace(/\_/g,"/") + Array(4 - (enc_json.length%4)).join("=")
  json = crypto.auth_aes256_d enc_json, key

  try
    JSON.parse(json)
  catch e
    null

generate = exports.generate = (obj, id="", lifetime, salt="") ->
  lifetime ?= settings.tokens.lifetime

  json = JSON.stringify obj
  enc_key = string.random_alphanum 16
  hash_key = string.random_alphanum 8
  mac_salt = string.random_alphanum 8
  expiration = String(((new Date()).getTime() + lifetime*1000))

  key = token_seed.enc_salt + expiration + enc_key + salt + id
  enc_json = crypto.auth_aes256(json, key).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")

  raw_token = "#{id}|#{enc_json}|#{enc_key}|#{expiration}|#{hash_key}"
  hash_check = crypto.mac_sha256(raw_token, token_seed.mac_salt + mac_salt).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")

  "#{raw_token}.#{hash_check}.#{mac_salt}"