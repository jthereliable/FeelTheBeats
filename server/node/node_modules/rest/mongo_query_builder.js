var mongo	= require("database/mongo.js"),
	__		= require("underscore");

exports.select_row_preprocess = function(field_settings) {
	var mongo_field = field_settings.mongo;
	var k, t, i, l, j, jl, fields;
	for(k in mongo_field)
	{
		tables = mongo_field[k];
		if(!(tables instanceof Array))
		{
			tables = [tables];
			mongo_field[k] = tables;
		}
		l = tables.length;
		for(i=0;i<l;i++)
		{
			fields = tables[i].fields;
			jl = fields.length;
			t = {"_id":0};
			for(j=0;j<jl;j++)
			{
				t[fields[j]] = 1;
			}
			tables[i]._fields = t;
		}
	}
};
exports.select_row_request = function(model, field_settings, params, query, callback) {
	var fields_requestable = field_settings.requestable;
	var fields_default = field_settings.request_default;
	var fields_show = (query.fields && query.fields.length>0)?query.fields.split(","):[];
	var fields_ignore = (query.ignore && query.ignore.length>0)?query.ignore.split(","):[];
	var fields_mongo = Object.keys(field_settings.mongo);
	
	fields_mongo = __.intersection(__.difference(__.union(fields_default, fields_show), fields_ignore), fields_requestable, fields_mongo);
	
	var where = params[field_settings.where_field];
	if(!isNaN(where))
	{
		where = Number(where);
	}
	
	var mongo_field = field_settings.mongo;
	var i=0, l=fields_mongo.length;
	var j_key, j_tables, j_table;
	var j_find;
	var j, jl;
	
	var out = {};
	
	function nextKey()
	{
		if(i==l)
		{
			callback(null, out);
			return;
		}
		j_key = fields_mongo[i];
		j_tables = mongo_field[j_key];
		j = 0;
		jl = j_tables.length;
		nextTable();
		i=i+1;
	}
	function nextTable()
	{
		if(j==jl)
		{
			nextKey();
			return;
		}
		j_table = j_tables[j];
		j_find = {};
		j_find[j_table.where] = where;
		mongo.collection(j_table.table).find(j_find, j_table._fields).limit(1).toArray(function(err, rows) {
			if(err)
			{
				callback(err, null);
				return;
			}
			if(rows.length != 0)
			{
				var k, row=rows[0];
				for(k in row)
				{
					out[j_key+"."+k] = row[k];
				}
			}
			nextTable();
		});
		j=j+1;
	}
	nextKey();
};