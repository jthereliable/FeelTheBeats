var	prototypes	= require("prototypes"),
	Model		= require("models/Model"),
	validators	= require("models/validators");

var User = function(fields, restrict) {
	fields = fields || {};
	restrict = restrict || {};
	this.constructor.super_.call(this, fields, restrict);
};
User.inherits(Model);
User.model = {
	"uid": {
		"type": validators.int(0),
		"required": true
	},
	"email": {
		"type": validators.email()
	},
	"password": {
		"type": validators.string()
	},
	"name": {
		"type": validators.string(1,32),
		"required": true
	},
	"image": {
		"type": validators.string(0,255)
	},
	"tier": {
		"type": validators.int(0,3)
	},
	"points": {
		"type": validators.int(0)
	},
	"experience": {
		"type": validators.int(0)
	},
	"mod_level": {
		"type": validators.int(0,5)
	},
	"charter_level": {
		"type": validators.int(0,2)
	},
	"date_join": {
		"type": validators.date()
	},
	"date_login": {
		"type": validators.date()
	},
	
	"ratings": {
		"type": validators.object()
	},
	"ratings.reputation": {
		"type": validators.int(0)
	},
	"ratings.rating": {
		"type": validators.int(-20,40)
	},
	
	"group": {
		"type": validators.object()
	},
	"group.gid": {
		"type": validators.int(0)
	},
	"group.name": {
		"type": validators.int(1,64)
	},
	"group.image": {
		"type": validators.int(0,255)
	},
	"group.position": {
		"type": validators.enumerable(["member", "moderator", "administrator", "owner"])
	}
};

module.exports = exports = User;