var	prototypes	= require("prototypes"),
	Model		= require("models/Model"),
	validators	= require("models/validators");

var Song = function(fields, restrict) {
	fields = fields || {};
	restrict = restrict || {};
	this.constructor.super_.call(this, fields, restrict);
};
Song.inherits(Model);
Song.model = {
	"sid": {
		"type": validators.int(0),
		"required": true
	},
	"name": {
		"type": validators.string(1,255),
		"required": true
	},
	"url": {
		"type": validators.string(0,255)
	},
	"image": {
		"type": validators.string(0,255)
	},
	"description": {
		"type": validators.string(0,65535)
	},
	"genres": {
		"type": validators.array(1)
	},
	"charts": {
		"type": validators.array(0)
	},
	"badges": {
		"type": validators.array(0)
	},
	"comments_topic	": {
		"type": validators.int(0)
	},
	
	"owner": {
		"type": validators.object()
	},
	"owner.uid": {
		"type": validators.int(0)
	},
	"owner.name": {
		"type": validators.string(1,32)
	},
	"owner.image": {
		"type": validators.string(0,255)
	},
	
	"artist": {
		"type": validators.object()
	},
	"artist.id": {
		"type": validators.int(0)
	},
	"artist.name": {
		"type": validators.string(1,32)
	},
	"artist.image": {
		"type": validators.string(0,255)
	},
	"artist.url": {
		"type": validators.string(0,255)
	},
	
	"ratings": {
		"type": validators.object()
	},
	"ratings.mod": {
		"type": validators.object()
	},
	"ratings.mod.quality": {
		"type": validators.number(0)
	},
	"ratings.mod.difficulty": {
		"type": validators.number(0)
	},
	"ratings.user": {
		"type": validators.object()
	},
	"ratings.user.quality": {
		"type": validators.number(0)
	},
	"ratings.user.difficulty": {
		"type": validators.number(0)
	}
};

module.exports = exports = Song;