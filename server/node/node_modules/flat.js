var flatten_helper = function(obj, out, key) {
	var out;
	var isArray = (obj instanceof Array);
	if(obj instanceof Object)
	{
		var keys=Object.keys(obj), keyInner, i, l=keys.length;
		for(i=0;i<l;i++)
		{
			keyInner = keys[i];
			flatten_helper(obj[keyInner], out, (isArray?(key+"["+keyInner+"]"):(key==""?keyInner:(key+"."+keyInner))));
		}
	} else {
		out[key] = obj;
	}
	return out;
};
var flatten = module.exports.flatten = exports.flatten = function(obj) {
	var out = {};
	return flatten_helper(obj, out, "");
};

var unflatten_helper = function(obj) {
	if(!(obj instanceof Object))
	{
		return obj;
	}
	var isArray = true;
	Object.keys(obj).forEach(function(key) {
		if(!(key%1==0))
		{
			isArray = false;
		}
	});
	if(isArray)
	{
		return obj;
	}
	var out = {};
	Object.keys(obj).forEach(function(key) {
		out[key] = unflatten_helper(obj[key]);
	});
	return out;
};
var unflatten = module.exports.unflatten = exports.unflatten = function(obj) {
	var out = [];
	var keys = Object.keys(obj), i, l=keys.length;
	keys.sort();
	
	var key, value, keyParts, keyPart, j, jl, arrayRegexTest = /\]$/, quotedStringTest = /^('.*')|(".*")$/;
	
	// Fill values
	for(i=0;i<l;i++)
	{
		key = keys[i];
		value = obj[key];
		if(value instanceof Object)
		{
			value = unflatten(value);
		}
		
		temp = out;
		keyParts = key.split(/[\.\[]/g);
		jl = keyParts.length;
		for(j=0;j<jl;j++)
		{
			keyPart = keyParts[j];
			if(keyPart=="")
			{
				continue;
			}
			if(arrayRegexTest.test(keyPart))
			{
				if(quotedStringTest.test(keyPart))
				{
					keyPart = keyPart.slice(1).slice(0,-2);
					if(keyPart%1==0)
					{
						keyPart = keyParts[j].slice(0,-1);
					}
				} else {
					keyPart = keyPart.slice(0,-1);
				}
			}
			if(j == jl-1)
			{
				temp[keyPart] = value;
			} else {
				if(temp[keyPart] == null)
				{
					temp[keyPart] = [];
				}
				temp = temp[keyPart];
			}
		}
	}
	
	// Convert arrays to objects
	out = unflatten_helper(out);
	
	return out;
};